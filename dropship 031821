import requests
import re
from bs4 import BeautifulSoup
import pyautogui
import time
import pandas as pd
from sqlalchemy import create_engine
import psycopg2
import richxerox
import pyperclip
import clipboard
from PIL import Image
import webbrowser


###############################################################



###############################################################

#def listing():

# opening everything

#h= 1
#h= str(h)
#f= 'https://used.samashmusic.com/product-category/guitars/electric-guitars/page/' + h
#webbrowser.open(f)

#h=1
#h=str(h)
#f=
#webbrowser.open(" 'https://used.samashmusic.com/product-category/guitars/electric-guitars/page/' + h ")
#time.sleep(6)
#RANDOM CLICK IN
#pyautogui.click(400,400)
#pyautogui.hotkey("command","ctrlleft","f")
#time.sleep(3)

#pyautogui.hotkey("command","t")
#time.sleep(5)
#b= pyautogui.locateOnScreen("ggg.png")
#print(b)
#ppp_list = []
#for h in b:
#    ppp_list.append(h)
#print(ppp_list)
#time.sleep(5)
#pyautogui.click(ppp_list[0] + 5, ppp_list[1] + 5)



###############################################################
h= 1
h= str(h)
f= 'https://used.samashmusic.com/product-category/guitars/electric-guitars/page/' + h
webbrowser.open(f)
time.sleep(10)

#RANDOM CLICK IN
pyautogui.click(400,400)
pyautogui.hotkey("command","ctrlleft","f")
time.sleep(3)



###############################################################

#CLICK ON FIRST PRODUCT
#time.sleep(2)
#print(pyautogui.position())

#SAFEGUARD AGAINST FAST START

while pyautogui.locateOnScreen("black.png") == None:
    print("FUJI LABS WAIT")
    time.sleep(2)
else:
    print("FUJI LABS SUCCESS")
    time.sleep(2)



first_item_location = 453, 461
#item_tab_location= 572, 52 # I THINK WITH THREE TABS OPEN_ Not what we want anymore- two only
item_tab_location= 774,50 # new 030921
url_location= 591, 17




pyautogui.keyDown("command")
pyautogui.click(first_item_location)
print("COMPLETED OPENING FIRST ITEM ON WEBSITE -- FUJI.LABS.NOTICE ")

c= 1
while pyautogui.locateOnScreen("newtab.png") == None:
    print("FUJI LABS WAIT")
    time.sleep(2)
    c+=1
    if c > 8:
        break
else:
    print("FUJI LABS SUCCESS")
    time.sleep(2)

pyautogui.click(item_tab_location)


pyautogui.click(url_location)
q= pyautogui.hotkey("command","c")
r= clipboard.paste()
r= str(r)
#print(r)
page = requests.get(r)
#print(page)
soup = BeautifulSoup(page.content, "html.parser")
#print(soup)
my_table = soup.find("div", {"class": "col-lg-12 col-md-12 col-sm-12 col-xs-12"})
#print(my_table)
data = my_table.findAll("h1")
#print(data)
xxx_list = []
for xrays in data:
    xxx_list.append(xrays.text)
#print(xxx_list)

# PRICE
my_table1 = soup.find("p", {"class": "price"})
#print(my_table1)
for x in my_table1:
    xxx_list.append(x)
#print(xxx_list)

#SHIPPING
my_table2 = soup.find("p", {"style": "margin-top: -25px;"})
#print(my_table2)
for y in my_table2:
    xxx_list.append(y)
#print(xxx_list)

#DESCRIPTION
my_table3 = soup.find("div", {"id": "tab-description"})
#print(my_table3)

#HANDLES VARYING CONTENT TEXT VARIATIONS_ ISSUE POSSIBLE ??
data3= my_table3.findAll("p")
#data3= my_table3.find("p").getText()
#print(data3)
for i in data3:
    #print(i.text)
    xxx_list.append(i.text)
print(xxx_list)
time.sleep(6)
print("SLEPT FOR 6 SEC BEFORE ESCAPE OUT ")

#SCREENSHOT

#pyautogui.keyDown("esc") # I THINK TO ESCAPE OUT OF BROWSER ENTRY AREA ???
pyautogui.click(1246, 409) # TO ESCAPE OUT OF BROwSER DROP DOWN
l= pyautogui.screenshot("image.png")
#print(l)
im= Image.open("image.png")
im.show()
print("SUCCESSFULLY TAKEN SCREENSHOT AND OPENED ON MAC | FUJI;LABS ")

c=0
while pyautogui.locateOnScreen("screenshot.png") == None: # TO ENSURE EVERYTHING IS TIME OUT CORRRECTLY
    print("FUJI LABS WAIT")
    time.sleep(2)
    c+=1
    if c > 8:
        break
else:
    print("FUJI LABS SUCCESS")
    time.sleep(2)

#3.15.21 left off 179/ 461 .3882863340563991%%%

#time.sleep(8) OUT 030921
pyautogui.click(60,39) #MAXIMIZE I THINK
time.sleep(2) #031821
#pyautogui.keyDown("mouse")

# CROPPING THE PICTURE OUT 031821
pyautogui.click(128,412) #CORNER UPPER LEFT ?? OR MAXIMIZE
pyautogui.dragTo(817, 791, 2, button='left')
pyautogui.hotkey("command", "k")

#pyautogui.dragTo(746,777)
#pyautogui.dragTo(100, 200, button='left')


time.sleep(4)
pyautogui.hotkey("command","ctrlleft","f")
time.sleep(2)


pyautogui.hotkey("command", "s")
time.sleep(2)

#DELETE SEQUENCE WITH CLICK IN FUNCTION
pyautogui.click(684, y=64)
time.sleep(2) #031721 ERROR
for x in range(30):
    pyautogui.keyDown("backspace")


#pyautogui.click(592, 63)
#QUICK REST AFTER 30 DELETES
time.sleep(2) ### NEEDS TO ENTER AS HELLO
pyautogui.write("hello")
pyautogui.hotkey("command", "s") # TRIGGER SAVE
#time.sleep(6) # GIVE TIME FOR PREVIEW TO PROCESS/SAVE

#pyautogui.click
# TEST TO SEE IF THIS DOES ANYTHING- NOT A TEST

time.sleep(2) # QUICK PAUSE
pyautogui.click(775, 156) #REPLACE BUTTON I THINK
#time.sleep(2) # QUICK PAUSE
#pyautogui.hotkey("command", "s")
time.sleep(5) # LONGER PAUSE
#pyautogui.hotkey("command","C")
#pyautogui.hotkey("control","left")




webbrowser.open('https://www.ebay.com/sl/prelist/suggest', new=2)



#time.sleep(15) # LONG PAUSE FOR SLOW NETWORK CONNECTION

while pyautogui.locateOnScreen("titlecheck.png") == None: # TO ENSURE EVERYTHING IS TIME OUT CORRRECTLY
    print("FUJI LABS WAIT")
    time.sleep(2)
else:
    print("FUJI LABS SUCCESS")
    time.sleep(2)

# CLICKS INTO TEXT BOX ENTRY
pyautogui.click(225, 175)
#pyautogui.write(xxx_list[0])
# FIRST ITEM ON LIST
g= xxx_list[0]
pyautogui.write(g)
#WAY TO ESCPAE OUT TAB
pyautogui.keyDown("tab")
#ENTER GO BUTTON - NOTICE 175 line y axis aye
pyautogui.click(1056, 176)
time.sleep(5)
#WAY TO ESCPAE OUT TAB
pyautogui.keyDown("tab")
#TITLE CLICK SECOND - OH THIS IS A SAFETY SECOND CLICK - NOTICE SAME LOCATION AYE
pyautogui.click(1056, 176)
time.sleep(7)

#NEW WEB PAGE- GIVEN 7 Seconds to load
pyautogui.keyDown("tab")
pyautogui.keyDown("tab")
#pyautogui.click(647,443)
#pyautogui.click(636, 417)
#pyautogui.click(637, 439)
#NEXT BUTTON
pyautogui.click(639, 487)
time.sleep(5)




#MATCHES BUTTON
pyautogui.click(629, 794)
pyautogui.click(629, 673)
pyautogui.click(629, 582)
pyautogui.click(629, 482)
pyautogui.click(629, 432) #031721 ERROR
pyautogui.click(629, 412) #031721 ERROR



time.sleep(5)

#USED BUTTON
pyautogui.click(333, 419)

#NEXT BUTTON - I THINK ITS ACTUALLY CONTINUE WITHOUT MATCH
#pyautogui.click(638, 513) #031821 ERROR
pyautogui.click(629, 794)
pyautogui.click(629, 673)
pyautogui.click(629, 582)
pyautogui.click(629, 482)
pyautogui.click(629, 432) #031721 ERROR
pyautogui.click(629, 412) #031721 ERROR


#USED BUTTON ADDED 031821 ???
pyautogui.click(333, 419)
time.sleep(2)


# NEXT BUTTON FOR REAL
c= pyautogui.locateOnScreen("next.png")
pyautogui.click(c)

print("You have picked the next button so far ")

#### ACTUALLY LOADING ONTO EBAY LIST PAGE HOORAY

time.sleep(5)
pyautogui.click(81, 241)
time.sleep(5)
pyautogui.click(81, 281)

## FORCE BRANDING


while pyautogui.locateOnScreen("brandcheck.png") == None: # TO ENSURE EVERYTHING IS TIME OUT CORRRECTLY
    print("FUJI LABS WAIT")
    time.sleep(2)
else:
    print("FUJI LABS SUCCESS")
    time.sleep(2)

    b= pyautogui.locateOnScreen("brandcheck.png")
    ppp_list = []
    for h in b:
        ppp_list.append(h)
    print(ppp_list)
    time.sleep(5)
    pyautogui.click(ppp_list[0] + 5, ppp_list[1] + 20)
    pyautogui.keyDown("down")
    pyautogui.keyDown("enter")

###########################################
pyautogui.click(81, 281)
pyautogui.keyDown("space")
pyautogui.click(81, 281)
pyautogui.keyDown("down")
pyautogui.keyDown("down")
pyautogui.keyDown("down")
time.sleep(5)



# iMAGE RECOGNIATION TECH
time.sleep(2)

b= pyautogui.locateOnScreen("zzz.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] + 10, ppp_list[1] + 10)

# THIS WILL GET TO CLICK INTO ADD FROM COMPUTER

value = "(left=299, top=694, width=177, height=27)"

# SAVING IMAGE PROGRAM

time.sleep(10) #NEEDS LONGER PAUSE
#pyautogui.click(557, 81) #WINDOW CLICK IN _ ERROR PRONE LOCATION BASED
pyautogui.keyDown("h")
pyautogui.keyDown("enter")
time.sleep(5)


# CLICK INTO DESCRIPTION  BOX MOVING ON NOW GO ON NOW
pyautogui.keyDown("space")

time.sleep(2)


# FIND ARIAL FONT  OBJECT
b= pyautogui.locateOnScreen("ttt.png")
print(b, "LOCATION OF ARIAL AREA")

ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(3)
pyautogui.click(ppp_list[0] + 5, ppp_list[1] + 5)
time.sleep(1)
pyautogui.click(ppp_list[0] + 5, ppp_list[1] + 5)
pyautogui.keyDown("tab")
pyautogui.keyDown("tab")


time.sleep(2)



for x in range(100): # DELETES ANY POSSIBILIY OF A HUGE TEXT BOX CONTENT
    pyautogui.keyDown("delete")


# ENTER DESCRIPTION AYE SHATTA BOI
braves= xxx_list[3:]
braves=str(braves)
pyautogui.write(braves)
time.sleep(2)
#pyautogui.keyDown("tab")
#pyautogui.click(640, 258) ## APPLY RECOMMENDATION BUTTON




# SHIPPING
pyautogui.click(68,463) # RANDOM SIDE CLICK ? ?
pyautogui.keyDown("space")
time.sleep(2) #QUICK PAUSE
pyautogui.keyDown("space")

b = pyautogui.locateOnScreen("aaa.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] - 10, ppp_list[1] + 3)

# SHIPPIGN NUMBER TWO _ "SELECT A SERVICE"
time.sleep(5) # PAUSE

b = pyautogui.locateOnScreen("bbb.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] +40 , ppp_list[1] + 10)

# SHIPPIGN NUMBER THREE _ "USPS 2 -9 day mofo "
time.sleep(5) # PAUSE

b = pyautogui.locateOnScreen("ccc.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] -15, ppp_list[1] + 5)


# SHIPPIGN NUMBER FOUR _ "submit wu tang clan "
time.sleep(5) # PAUSE

b = pyautogui.locateOnScreen("eee.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] +35 , ppp_list[1] + 5)




pyautogui.write(xxx_list[2])
pyautogui.keyDown("tab")
pyautogui.click(55, 543) # RANDOM SIDE CLICK
pyautogui.click(57, 545) # RANDOM SIDE CLICK
#pyautogui.keyDown("space")


# SHIPPIGN NUMBER FOUR _ "submit wu tang clan "
time.sleep(5) # PAUSE

b = pyautogui.locateOnScreen("ddd.png")
print(b)
ppp_list= []
for h in b:
    ppp_list.append(h)
print(ppp_list)
time.sleep(5)
pyautogui.click(ppp_list[0] +5 , ppp_list[1] + 5)
time.sleep(2) # QUICK PAUSE _ DOESN"T SEEM TO LIKE ONLY ONE HIT CLICK
pyautogui.click(ppp_list[0] +5 , ppp_list[1] + 5)
time.sleep(5)

pyautogui.click(880, 641) # GET OUT OF EASY PRICING


###############################################################
#listing()

