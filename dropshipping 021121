import requests
import re
from bs4 import BeautifulSoup
import pyautogui
import time
import pandas as pd
from sqlalchemy import create_engine
import psycopg2
import richxerox
import pyperclip
import clipboard
from PIL import Image
import webbrowser


###############################################################

#START ON FIRST PAGE OF SAMASH
#MUST HAVE EBAY OPEN ON SECOND TAB
#CLICK ON FIRST PRODUCT
#time.sleep(2)
#print(pyautogui.position())

first_item_location = 453, 461
item_tab_location= 572, 52
url_location= 591, 17

#for x in range(12):

#print(pyautogui.position())

pyautogui.keyDown("command")
pyautogui.click(first_item_location)
pyautogui.click(item_tab_location)
pyautogui.click(url_location)
q= pyautogui.hotkey("command","c")
r= clipboard.paste()
r= str(r)
#print(r)
page = requests.get(r)
#print(page)
soup = BeautifulSoup(page.content, "html.parser")
#print(soup)
my_table = soup.find("div", {"class": "col-lg-12 col-md-12 col-sm-12 col-xs-12"})
#print(my_table)
data = my_table.findAll("h1")
#print(data)
xxx_list = []
for xrays in data:
    xxx_list.append(xrays.text)
#print(xxx_list)

# PRICE
my_table1 = soup.find("p", {"class": "price"})
#print(my_table1)
for x in my_table1:
    xxx_list.append(x)
#print(xxx_list)

#SHIPPING
my_table2 = soup.find("p", {"style": "margin-top: -25px;"})
#print(my_table2)
for y in my_table2:
    xxx_list.append(y)
#print(xxx_list)

#DESCRIPTION
my_table3 = soup.find("div", {"id": "tab-description"})
#print(my_table3)
data3= my_table3.findAll("p")
#data3= my_table3.find("p").getText()
#print(data3)
for i in data3:
    #print(i.text)
    xxx_list.append(i.text)
print(xxx_list)

#NEXT STEP IS TO DO A MANUAL 5 PIC SCREENSHOT

pyautogui.keyDown("esc")
l= pyautogui.screenshot("image.png")
#print(l)
im= Image.open("image.png")
im.show()
#(left, upper, right, lower) = (13,120,100,100)
#im_crop=im.crop((left, upper, right, lower))
#im_crop.show()

#print(pyautogui.position())
#royals_locations= 226, 325
#mets_location= 591, 17

#new_location= 56, 437
#old_location= 791, 429

#print(pyautogui.position())

time.sleep(8)
pyautogui.click(60,39)
#pyautogui.keyDown("mouse")
pyautogui.click(128,412) #CORNER UPPER LEFT
#pyautogui.dragTo(746,777)
#pyautogui.dragTo(100, 200, button='left')


#pyautogui.click(56,437)
#pyautogui.click(746, 777)

#pyautogui.dragTo(746, 777,button="right")
#pyautogui.mouseDown(new_location,button="left")
#pyautogui.mouseUp(old_location)
#pyautogui.hotkey("command","k")
time.sleep(4)
pyautogui.hotkey("command", "s")
#b=0
#pyautogui.write("hello")
#b=b+1
#pyautogui.keyDown("delete")
time.sleep(5)
pyautogui.click(592, 63)
time.sleep(5)
pyautogui.write("hello")
pyautogui.hotkey("command", "s")
time.sleep(2)
#pyautogui.click(709, 227)
pyautogui.click(775, 156)
time.sleep(2)
#pyautogui.hotkey("command","C")
#pyautogui.hotkey("control","left")
webbrowser.open('https://www.ebay.com/sl/prelist/suggest', new=2)


# NEXT IS EBAY IMPLEMENT
# HAVE LIST OF STRINGS AND PIC ON FILE
# ENOUGH TO PRE FILL EBAY POST SELL FORM ESSENT
# ALSO haVETO CREATE NEXT LISTING SMASH CODE BUT EASY


#pyautogui.click(930, 48)
##pyautogui.click(945, 50)
#EBAY
#ebay_location= 891, 51
#ebay_location= 951, y=81
#ebay_location= 894, 75
#ebay_location= 948, 84
##ebay_location= 949, 76
##pyautogui.click(ebay_location)
##time.sleep(2)
#sell_location= 948, 78
##nnm= 949, 107
##pyautogui.click(nnm)
##time.sleep(5)
##list_location= 961, 427
##pyautogui.click(list_location)

## CATEGORY
pyautogui.click(989, 298)


pyautogui.click(635, 441)




time.sleep(5)
pyautogui.click(225, 175)
#pyautogui.write(xxx_list[0])
g= xxx_list[0]
pyautogui.write(g)
pyautogui.keyDown("tab")
pyautogui.click(1056, 176)
time.sleep(2)
pyautogui.keyDown("tab")
#TITLE CLICK SECOND
pyautogui.click(1056, 176)
time.sleep(7)

pyautogui.keyDown("tab")
pyautogui.keyDown("tab")
#pyautogui.click(647,443)
#pyautogui.click(636, 417)
#pyautogui.click(637, 439)
pyautogui.click(639, 487)
time.sleep(3)
#pyautogui.click(613, 761)
pyautogui.click(629, 793)
time.sleep(3)
#USED BUTTON
#pyautogui.click(351, 428)
pyautogui.click(333, 419)
pyautogui.click(638, 513)





















